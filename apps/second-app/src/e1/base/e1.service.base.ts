/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, E1 as PrismaE1 } from "@prisma/client";

export class E1ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.E1CountArgs, "select">): Promise<number> {
    return this.prisma.e1.count(args);
  }

  async e1s(args: Prisma.E1FindManyArgs): Promise<PrismaE1[]> {
    return this.prisma.e1.findMany(args);
  }
  async e1(args: Prisma.E1FindUniqueArgs): Promise<PrismaE1 | null> {
    return this.prisma.e1.findUnique(args);
  }
  async createE1(args: Prisma.E1CreateArgs): Promise<PrismaE1> {
    return this.prisma.e1.create(args);
  }
  async updateE1(args: Prisma.E1UpdateArgs): Promise<PrismaE1> {
    return this.prisma.e1.update(args);
  }
  async deleteE1(args: Prisma.E1DeleteArgs): Promise<PrismaE1> {
    return this.prisma.e1.delete(args);
  }
}
