/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ToDoUser as PrismaToDoUser } from "@prisma/client";

export class ToDoUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ToDoUserCountArgs, "select">): Promise<number> {
    return this.prisma.toDoUser.count(args);
  }

  async toDoUsers(
    args: Prisma.ToDoUserFindManyArgs
  ): Promise<PrismaToDoUser[]> {
    return this.prisma.toDoUser.findMany(args);
  }
  async toDoUser(
    args: Prisma.ToDoUserFindUniqueArgs
  ): Promise<PrismaToDoUser | null> {
    return this.prisma.toDoUser.findUnique(args);
  }
  async createToDoUser(
    args: Prisma.ToDoUserCreateArgs
  ): Promise<PrismaToDoUser> {
    return this.prisma.toDoUser.create(args);
  }
  async updateToDoUser(
    args: Prisma.ToDoUserUpdateArgs
  ): Promise<PrismaToDoUser> {
    return this.prisma.toDoUser.update(args);
  }
  async deleteToDoUser(
    args: Prisma.ToDoUserDeleteArgs
  ): Promise<PrismaToDoUser> {
    return this.prisma.toDoUser.delete(args);
  }
}
